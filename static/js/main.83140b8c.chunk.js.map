{"version":3,"sources":["Header.js","logo.svg","Sidebar.js","SortBar.js","Footer.js","Documentation/Surface.js","Documentation/Theme.js","Documentation/Basic.js","Documentation/Elevation.js","Documentation/Interaction.js","Documentation/Shape.js","Documentation/Size.js","Documentation/Flex.js","Documentation/Documentation.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","style","justifyContent","paddingRight","paddingLeft","href","onClick","toggleTheme","Sidebar","useState","results","setResults","search","setSearch","sections","filterByValue","array","string","filter","o","Object","keys","some","k","toLowerCase","includes","width","position","value","placeholder","onChange","e","target","marginRight","console","log","length","map","section","name","SortBar","marginLeft","Footer","fontSize","Surface","marginBottom","source","plugins","gfm","Theme","Basic","Elevation","Interaction","Shape","Size","Flex","Documentation","id","App","theme","setTheme","minHeight","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83140b8c.chunk.js","sourcesContent":["export const Header = (props) => {\r\n    return (\r\n      <div className=\"element \">\r\n        <div className=\"container flex row flex-center\" style={{justifyContent: \"space-between\", paddingRight: '1.5rem', paddingLeft: '1.5rem'}}>\r\n          <div className=\"link margin-none padding-half large title\">topography css</div>\r\n          <div className=\"flex row flex-center\">\r\n            <a href=\"https://github.com/JohnnyRacket/topography-css\"><div className=\"input highlight margin-none padding\">Github</div></a>\r\n            <a href=\"https://www.npmjs.com/package/topography-css\"><div className=\"input highlight margin-none padding\">NPM</div></a>\r\n            <button className=\"input accent semi-rounded \" onClick={() => props.toggleTheme()}>Switch Theme</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {useState} from 'react';\r\nimport './Sidebar.css';\r\n\r\nexport const Sidebar = (props) => {\r\n\r\n    const [results, setResults] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const sections =  [\r\n        {\r\n            \"name\": \"Surfaces\",\r\n            \"href\": \"surface\",\r\n            \"text\": `#### There are 3 key surface concepts in this library:\r\n            | Class      | Description |\r\n            | ----------- | ----------- |\r\n            | **background** | the background color/surface |\r\n            | **input** | something the user will input into, i.e. a text input or a button |\r\n            | **element** | a div that is tangible (i.e. visually shows on screen), this will be like a card holding text or anything that needs styling  inherited |`\r\n        },\r\n        {\r\n            \"name\": \"Themes\",\r\n            \"href\": \"theme\",\r\n            \"text\": `\r\n            #### There are 3 main theme concepts in this library:\r\n            \r\n            | Class      | Description |\r\n            | ----------- | ----------- |\r\n            | **light** | a light theme |\r\n            | **dark** | a dark mode theme |\r\n            | **accent** | a chosen accent color to make certain things pop, honestly more a modifier than a theme, but it is changable via css vars like a theme |\r\n            `\r\n        },\r\n        {\r\n            \"name\": \"Basic Modifiers\",\r\n            \"href\": \"basic\",\r\n            \"text\":`\r\n            #### Within a given theme there are a few base style modifiers:\r\n            \r\n            | Class      | Description |\r\n            | ----------- | ----------- |\r\n            | **accent**| modifier to make something pop by using color |\r\n            | **contrast**| a high sontrast surface |\r\n            | **outline**| a surface that has the same color as the background but with an outline to denote it |\r\n            | **link**| no surface, but bold text that will brighten/contrast when hovered |\r\n            `\r\n        },\r\n        {\r\n            \"name\": \"Interaction Modifiers\",\r\n            \"href\": \"interaction\",\r\n            \"text\":`\r\n            #### Interaction modifiers:\r\n            \r\n            | Class      | Description |\r\n            | ----------- | ----------- |\r\n            | **highlight** | highlights the element on hover and makes cursor a pointer ot show it is interactable |\r\n            \r\n            `\r\n        },\r\n        {\r\n            \"name\": \"Elevation Modifiers\",\r\n            \"href\": \"elevation\",\r\n            \"text\":`\r\n            #### Elevation modifiers (drop shadow):\r\n            \r\n            | Class      | Description |\r\n            | ----------- | ----------- |\r\n            | **elevation-0** | no drop shadow |\r\n            | **elevation-1** | smallest drop shadow, gives the illusion of being right on top of the surface its on |\r\n            | **elevation-2** | medium drop shadow, more elevated looking |\r\n            | **elevation-3** | medium drop shadow, even more elevated looking |\r\n            | **elevation-4** | largest, but also lightest, gives illusion of being far off the surface its on |\r\n            \r\n            #### Elevation modifier on hover (hence the verb float):\r\n            \r\n            | Class      | Description |\r\n            | ----------- | ----------- |\r\n            | **float-0** | no drop shadow when hoveered |\r\n            | **float-1** | smallest drop shadow, gives the illusion of being right on top of the surface its on when hovered |\r\n            | **float-2** | medium drop shadow, more elevated looking when hovered |\r\n            | **float-3** | medium drop shadow, even more elevated looking when hovered |\r\n            | **float-4** | largest, but also lightest, gives illusion of being far off the surface its on when hovered |\r\n            \r\n            A common way to combine the above is to have an element have a low/no elevation and a higher float\r\n            `\r\n        },\r\n        {\r\n            \"name\": \"Shape Modifiers\",\r\n            \"href\": \"shape\",\r\n            \"text\":`\r\n            #### Shape modifiers (by default everything is square):\r\n            \r\n            | Class      | Description |\r\n            | ----------- | ----------- |\r\n            | **square** | default, but included class for resetting, or changing via js |\r\n            | **semi-rounded** | rounded corners |\r\n            | **rounded** | pill-like shape |\r\n            | **round** | round, as in a circle, as long as your height and width are set the same |\r\n            \r\n            `\r\n        },\r\n        {\r\n            \"name\": \"Size Modifiers\",\r\n            \"href\": \"size\",\r\n            \"text\":`\r\n            #### Size modifiers (this affects text size, so it will change the size of inputs/buttons/things that contain text):\r\n            \r\n            | Class      | Description |\r\n            | ----------- | ----------- |\r\n            | **small** |\r\n            | **medium** |\r\n            | **large** |\r\n            \r\n            `\r\n        },\r\n        {\r\n            \"name\": \"Flex Helpers\",\r\n            \"href\": \"flex\",\r\n            \"text\":`\r\n            ### Helpers\r\n            these are classes that are just shorhand utiliy classes for styling\r\n            \r\n            #### Flex helpers (allowing you to build flex layouts faster using classes):\r\n            \r\n            | Class      | Description |\r\n            | ----------- | ----------- |\r\n            | **flex** |    display: flex; |\r\n            | **column** | flex-direction: column; |\r\n            | **row** | flex-direction: row; |\r\n            | **align-center** | align-Items: center; |\r\n            | **justify-center** | justify-content: center; |\r\n            | **flex-center** | align-items: center;justify-content: center; |\r\n            | **flex-wrap** | flex-wrap: wrap; |\r\n            | **flex-fill** | flex: 1; |\r\n            `\r\n        },\r\n        \r\n    ]\r\n\r\n    function filterByValue(array, string) {\r\n        return array.filter(o =>\r\n            Object.keys(o).some(k => o[k].toLowerCase().includes(string.toLowerCase())));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"element semi-rounded spaced margin text-left\" style={{width: '300px', position: 'fixed'}}>\r\n        <h3>Search</h3>\r\n        <div className=\"flex row flex-center\">\r\n            <input value={search} className=\"input rounded fill-width margin-none contrast\" placeholder=\"Search...\" onChange={(e) => setSearch(e.target.value)}></input>\r\n            <button style={{marginRight: 0}} className=\"input rounded accent text-center\" onClick={() => {setResults(filterByValue(sections, search)); console.log(filterByValue(sections, search))}}>Go</button>  \r\n        </div>\r\n        <h3>Results</h3>\r\n        {\r\n        results.length === 0 \r\n        ?\r\n        <div className=\"note margin-half\">Search to find results...</div>\r\n        :\r\n        results.map(section => <a href={`#${section.href}`}><div className=\"link padding-half\" >{section.name}</div></a>)\r\n        }\r\n        <h3>Sections</h3>\r\n        {sections.map(section => <a href={`#${section.href}`}><div className=\"link padding-half\" >{section.name}</div></a>)}\r\n\r\n        </div>\r\n    );\r\n  }\r\n","\r\nexport const SortBar = (props) => {\r\n    return (\r\n        <div className=\"element semi-rounded margin flex row flex-center padding-half\" style={{justifyContent: 'space-between'}}>\r\n          <div className=\"bold\" style={{marginLeft: '1rem'}}>Documentation</div>\r\n            <div>Jump to:\r\n            <select className=\"input semi-rounded contrast\">\r\n            <option>Theme</option>\r\n              <option>Basics</option>\r\n              <option>Modifiers</option>\r\n              <option>Helpers</option>\r\n            </select>\r\n            </div>\r\n          </div>\r\n    );\r\n  }\r\n","export const Footer = (props) => {\r\n    return (\r\n      <div className=\"contrast\" >\r\n        <div className=\"container flex row\" style={{justifyContent: \"space-between\"}}>\r\n          <div className=\"element contrast\" style={{fontSize: '.8rem'}}>Topography CSS Demo </div>\r\n          <div className=\"element contrast\" >MIT License</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n","import ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm'\r\n\r\nexport const Surface = (props) => {\r\n\r\n    const markdown = `\r\n#### There are 3 key surface concepts in this library:\r\n\r\n| Class      | Description |\r\n| ----------- | ----------- |\r\n| **background** | the background color/surface |\r\n| **input** | something the user will input into, i.e. a text input or a button |\r\n| **element** | a div that is tangible (i.e. visually shows on screen), this will be like a card holding text or anything that needs styling  inherited |\r\n`;\r\n\r\n    return (\r\n        <div className=\"text-left\" style={{marginBottom: '4rem'}}>\r\n            <ReactMarkdown source={markdown} plugins={[gfm]} />\r\n        </div>\r\n    );\r\n  }\r\n","import ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm'\r\n\r\nexport const Theme = (props) => {\r\n\r\n    const markdown = `\r\n#### There are 3 main theme concepts in this library:\r\n\r\n| Class      | Description |\r\n| ----------- | ----------- |\r\n| **light** | a light theme |\r\n| **dark** | a dark mode theme |\r\n| **accent** | a chosen accent color to make certain things pop, honestly more a modifier than a theme, but it is changable via css vars like a theme |\r\n`;\r\n\r\n    return (\r\n        <div className=\"text-left\" style={{marginBottom: '4rem'}}>\r\n            <ReactMarkdown source={markdown} plugins={[gfm]} />\r\n        </div>\r\n    );\r\n  }\r\n","import ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm'\r\n\r\nexport const Basic = (props) => {\r\n\r\n    const markdown = `\r\n#### Within a given theme there are a few base style modifiers:\r\n\r\n| Class      | Description |\r\n| ----------- | ----------- |\r\n| **accent**| modifier to make something pop by using color |\r\n| **contrast**| a high sontrast surface |\r\n| **outline**| a surface that has the same color as the background but with an outline to denote it |\r\n| **link**| no surface, but bold text that will brighten/contrast when hovered |\r\n`;\r\n\r\n    return (\r\n        <div className=\"text-left\" style={{marginBottom: '4rem'}}>\r\n            <ReactMarkdown source={markdown} plugins={[gfm]} />\r\n        </div>\r\n    );\r\n  }\r\n","import ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm'\r\n\r\nexport const Elevation = (props) => {\r\n\r\n    const markdown = `\r\n#### Elevation modifiers (drop shadow):\r\n\r\n| Class      | Description |\r\n| ----------- | ----------- |\r\n| **elevation-0** | no drop shadow |\r\n| **elevation-1** | smallest drop shadow, gives the illusion of being right on top of the surface its on |\r\n| **elevation-2** | medium drop shadow, more elevated looking |\r\n| **elevation-3** | medium drop shadow, even more elevated looking |\r\n| **elevation-4** | largest, but also lightest, gives illusion of being far off the surface its on |\r\n\r\n#### Elevation modifier on hover (hence the verb float):\r\n\r\n| Class      | Description |\r\n| ----------- | ----------- |\r\n| **float-0** | no drop shadow when hoveered |\r\n| **float-1** | smallest drop shadow, gives the illusion of being right on top of the surface its on when hovered |\r\n| **float-2** | medium drop shadow, more elevated looking when hovered |\r\n| **float-3** | medium drop shadow, even more elevated looking when hovered |\r\n| **float-4** | largest, but also lightest, gives illusion of being far off the surface its on when hovered |\r\n\r\nA common way to combine the above is to have an element have a low/no elevation and a higher float\r\n`;\r\n\r\n    return (\r\n        <div className=\"text-left\" style={{marginBottom: '4rem'}}>\r\n            <ReactMarkdown source={markdown} plugins={[gfm]} />\r\n        </div>\r\n    );\r\n  }\r\n","import ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm'\r\n\r\nexport const Interaction = (props) => {\r\n\r\n    const markdown = `\r\n#### Interaction modifiers:\r\n\r\n| Class      | Description |\r\n| ----------- | ----------- |\r\n| **highlight** | highlights the element on hover and makes cursor a pointer ot show it is interactable |\r\n\r\n`;\r\n\r\n    return (\r\n        <div className=\"text-left\" style={{marginBottom: '4rem'}}>\r\n            <ReactMarkdown source={markdown} plugins={[gfm]} />\r\n        </div>\r\n    );\r\n  }\r\n","import ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm'\r\n\r\nexport const Shape = (props) => {\r\n\r\n    const markdown = `\r\n#### Shape modifiers (by default everything is square):\r\n\r\n| Class      | Description |\r\n| ----------- | ----------- |\r\n| **square** | default, but included class for resetting, or changing via js |\r\n| **semi-rounded** | rounded corners |\r\n| **rounded** | pill-like shape |\r\n| **round** | round, as in a circle, as long as your height and width are set the same |\r\n\r\n`;\r\n\r\n    return (\r\n        <div className=\"text-left\" style={{marginBottom: '4rem'}}>\r\n            <ReactMarkdown source={markdown} plugins={[gfm]} />\r\n        </div>\r\n    );\r\n  }\r\n","import ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm'\r\n\r\nexport const Size = (props) => {\r\n\r\n    const markdown = `\r\n#### Size modifiers (this affects text size, so it will change the size of inputs/buttons/things that contain text):\r\n\r\n| Class      | Description |\r\n| ----------- | ----------- |\r\n| **small** |\r\n| **medium** |\r\n| **large** |\r\n\r\n`;\r\n\r\n    return (\r\n        <div className=\"text-left\" style={{marginBottom: '4rem'}}>\r\n            <ReactMarkdown source={markdown} plugins={[gfm]} />\r\n        </div>\r\n    );\r\n  }\r\n","import ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm'\r\n\r\nexport const Flex = (props) => {\r\n\r\n    const markdown = `\r\n### Helpers\r\nthese are classes that are just shorhand utiliy classes for styling\r\n\r\n#### Flex helpers (allowing you to build flex layouts faster using classes):\r\n\r\n| Class      | Description |\r\n| ----------- | ----------- |\r\n| **flex** |    display: flex; |\r\n| **column** | flex-direction: column; |\r\n| **row** | flex-direction: row; |\r\n| **align-center** | align-Items: center; |\r\n| **justify-center** | justify-content: center; |\r\n| **flex-center** | align-items: center;justify-content: center; |\r\n| **flex-wrap** | flex-wrap: wrap; |\r\n| **flex-fill** | flex: 1; |\r\n`;\r\n\r\n    return (\r\n        <div className=\"text-left\" style={{marginBottom: '4rem'}}>\r\n            <ReactMarkdown source={markdown} plugins={[gfm]} />\r\n        </div>\r\n    );\r\n  }\r\n","import {Surface} from './Surface'\r\nimport {Theme} from './Theme';\r\nimport {Basic} from './Basic';\r\nimport {Elevation} from './Elevation';\r\nimport {Interaction} from './Interaction';\r\nimport {Shape} from './Shape';\r\nimport {Size} from './Size';\r\nimport {Flex} from './Flex';\r\n\r\nexport const Documentation = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <a id=\"surface\" >\r\n                <Surface/>\r\n            </a>\r\n            <a id=\"theme\">\r\n                <Theme/>\r\n            </a>\r\n            <a id=\"basic\">\r\n                <Basic/>\r\n            </a>\r\n            <a id=\"elevation\">\r\n                <Elevation/>\r\n            </a>\r\n            <a id=\"interaction\">\r\n                <Interaction/>\r\n            </a>\r\n            <a id=\"shape\">\r\n                <Shape/>\r\n            </a>\r\n            <a id=\"size\">\r\n                <Size/>\r\n            </a>\r\n            <a id=\"flex\">\r\n                <Flex/>\r\n            </a>\r\n            \r\n        </div>\r\n    );\r\n  }\r\n","import logo from './logo.svg';\nimport './App.css';\nimport {Header} from './Header';\nimport {Sidebar} from './Sidebar';\nimport {Card} from './Card';\nimport {useState} from 'react';\nimport { SortBar } from './SortBar';\nimport { Footer } from './Footer';\nimport { Documentation } from './Documentation/Documentation';\n\nfunction App() {\n  const [theme, setTheme] = useState(\"dark\");\n  return (\n    <div className={`App background ${theme}`} style={{minHeight: '100vh'}}>\n      <Header toggleTheme={() => {theme == \"dark\" ? setTheme(\"light\") : setTheme(\"dark\")}}/>\n      <div className=\"container\">\n        <div className=\"flex row flex-wrap\">\n          <div className=\"margin-double padding flex-fill content\">\n          <SortBar />\n            <div className=\"element contrast spaced semi-rounded margin\">\n              <Documentation />\n            </div>\n          </div>\n          <div className=\"sidebar\" style={{width: '300px', marginTop:'3rem', marginRight: '3rem'}}>\n            <Sidebar/>\n          </div>\n        </div>\n      </div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './topography.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import 'topography-css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}